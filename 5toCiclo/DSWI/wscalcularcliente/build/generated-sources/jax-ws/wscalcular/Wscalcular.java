
package wscalcular;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6-1b01 
 * Generated source version: 2.2
 * 
 */
@WebService(name = "wscalcular", targetNamespace = "http://wscalcular/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface Wscalcular {


    /**
     * 
     * @param a
     * @param r
     * @param b
     * @param c
     * @param t
     * @param x
     * @return
     *     returns java.lang.Double
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "calcular", targetNamespace = "http://wscalcular/", className = "wscalcular.Calcular")
    @ResponseWrapper(localName = "calcularResponse", targetNamespace = "http://wscalcular/", className = "wscalcular.CalcularResponse")
    @Action(input = "http://wscalcular/wscalcular/calcularRequest", output = "http://wscalcular/wscalcular/calcularResponse")
    public Double calcular(
        @WebParam(name = "r", targetNamespace = "")
        double r,
        @WebParam(name = "x", targetNamespace = "")
        double x,
        @WebParam(name = "a", targetNamespace = "")
        double a,
        @WebParam(name = "b", targetNamespace = "")
        double b,
        @WebParam(name = "c", targetNamespace = "")
        double c,
        @WebParam(name = "t", targetNamespace = "")
        double t);

}
