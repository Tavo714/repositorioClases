<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd">
	<http:listener-config name="HTTP_Listener_Configuration" host="0.0.0.0" port="8070" doc:name="HTTP Listener Configuration"/>
	<db:mysql-config name="MySQL_Configuration" host="localhost" port="3306" user="root" database="bdserviciosidat" doc:name="MySQL Configuration"/>
	<db:template-query name="Template_Query" doc:name="Template Query">
		<db:parameterized-query><![CDATA[select * from producto where codpro=:codigo]]></db:parameterized-query>
		<db:in-param name="codigo" type="INTEGER" defaultValue="#[message.inboundProperties.'http.uri.params'.codigo]"/>
	</db:template-query>
	<db:template-query name="Template_Query1" doc:name="Template Query">
		<db:parameterized-query><![CDATA[insert into producto(codpro,codcat,despro,unipro,pcopro,pvepro,stopro,frepro) values (:codpro,:codcat,:despro,:unipro,:pcopro,:pvepro,:stopro,:frepro)]]></db:parameterized-query>
		<db:in-param name="codpro" type="INTEGER" defaultValue="#[Integer.parseInt(message.payload.get(&quot;codpro&quot;).toString())]"/>
		<db:in-param name="codcat" type="INTEGER" defaultValue="#[Integer.parseInt(message.payload.get(&quot;codcat&quot;).toString())]"/>
		<db:in-param name="despro" type="VARCHAR" defaultValue="#[message.payload.get(&quot;despro&quot;).toString().replaceAll('\&quot;','')]"/>
		<db:in-param name="unipro" type="VARCHAR" defaultValue="#[message.payload.get(&quot;unipro&quot;).toString().replaceAll('\&quot;','')]"/>
		<db:in-param name="pcopro" type="DOUBLE" defaultValue="#[Double.parseDouble(message.payload.get(&quot;pcopro&quot;).toString())]"/>
		<db:in-param name="pvepro" type="DOUBLE" defaultValue="#[Double.parseDouble(message.payload.get(&quot;pvepro&quot;).toString())]"/>
		<db:in-param name="stopro" type="DOUBLE" defaultValue="#[Double.parseDouble(message.payload.get(&quot;stopro&quot;).toString())]"/>
		<db:in-param name="frepro" type="VARCHAR" defaultValue="#[message.payload.get(&quot;frepro&quot;).toString().replaceAll('\&quot;','')]"/>
	</db:template-query>
	<db:template-query name="Template_Query2" doc:name="Template Query">
		<db:parameterized-query><![CDATA[select * from producto where frepro>=:finicial and frepro<=:ffinal]]></db:parameterized-query>
		<db:in-param name="finicial" type="VARCHAR" defaultValue="#[message.inboundProperties.'http.query.params'.desde]"/>
		<db:in-param name="ffinal" type="VARCHAR" defaultValue="#[message.inboundProperties.'http.query.params'.hasta]"/>
	</db:template-query>
	<db:template-query name="Template_Query3" doc:name="Template Query">
		<db:parameterized-query><![CDATA[delete from producto where codpro=:codigo]]></db:parameterized-query>
		<db:in-param name="codigo" type="INTEGER" defaultValue="#[message.inboundProperties.'http.uri.params'.id]"/>
	</db:template-query>
	<db:template-query name="Template_Query4" doc:name="Template Query">
		<db:parameterized-query><![CDATA[update producto set codcat=:codcat, despro=:despro, unipro=:unipro, pcopro=:pcopro, pvepro=:pvepro, stopro=:stopro, frepro=:frepro where codpro=:codigo]]></db:parameterized-query>
		<db:in-param name="codigo" type="INTEGER" defaultValue="#[message.inboundProperties.'http.uri.params'.codigo]"/>
		<db:in-param name="codcat" type="INTEGER" defaultValue="#[Integer.parseInt(message.payload.get(&quot;codcat&quot;).toString())]"/>
		<db:in-param name="despro" type="VARCHAR" defaultValue="#[message.payload.get(&quot;despro&quot;).toString().replaceAll('\&quot;','')]"/>
		<db:in-param name="unipro" type="VARCHAR" defaultValue="#[message.payload.get(&quot;unipro&quot;).toString().replaceAll('\&quot;','')]"/>
		<db:in-param name="pcopro" type="DOUBLE" defaultValue="#[Double.parseDouble(message.payload.get(&quot;pcopro&quot;).toString())]"/>
		<db:in-param name="pvepro" type="DOUBLE" defaultValue="#[Double.parseDouble(message.payload.get(&quot;pvepro&quot;).toString())]"/>
		<db:in-param name="stopro" type="DOUBLE" defaultValue="#[Double.parseDouble(message.payload.get(&quot;stopro&quot;).toString())]"/>
		<db:in-param name="frepro" type="VARCHAR" defaultValue="#[message.payload.get(&quot;frepro&quot;).toString().replaceAll('\&quot;','')]"/>
	</db:template-query>
	<flow name="ListarProductos">
		<http:listener config-ref="HTTP_Listener_Configuration" path="/Producto" allowedMethods="GET" doc:name="HTTP"/>
		<db:select config-ref="MySQL_Configuration" doc:name="Database">
			<db:parameterized-query><![CDATA[select * from producto]]></db:parameterized-query>
		</db:select>
		<json:object-to-json-transformer doc:name="Object to JSON"/>
	</flow>
	<flow name="BuscarProducto">
		<http:listener config-ref="HTTP_Listener_Configuration" path="/Buscarproducto/{codigo}" allowedMethods="GET" doc:name="HTTP"/>
		<db:select config-ref="MySQL_Configuration" doc:name="Database">
			<db:template-query-ref name="Template_Query"/>
		</db:select>
		<json:object-to-json-transformer doc:name="Object to JSON"/>
	</flow>
	<flow name="GuardarProducto">
		<http:listener config-ref="HTTP_Listener_Configuration" path="/Producto" allowedMethods="POST" doc:name="HTTP"/>
		<json:json-to-object-transformer doc:name="JSON to Object"/>
		<db:insert config-ref="MySQL_Configuration" doc:name="Database">
			<db:template-query-ref name="Template_Query1"/>
		</db:insert>
		<json:object-to-json-transformer doc:name="Object to JSON"/>
	</flow>
	<flow name="Filtrar">
		<http:listener config-ref="HTTP_Listener_Configuration" path="/Filtrar" allowedMethods="GET" doc:name="HTTP"/>
		<db:select config-ref="MySQL_Configuration" doc:name="Database">
			<db:template-query-ref name="Template_Query2"/>
		</db:select>
		<json:object-to-json-transformer doc:name="Object to JSON"/>
	</flow>
	<flow name="EliminarProducto">
		<http:listener config-ref="HTTP_Listener_Configuration" path="/Producto/{id}" allowedMethods="DELETE" doc:name="HTTP"/>
		<db:delete config-ref="MySQL_Configuration" doc:name="Database">
			<db:template-query-ref name="Template_Query3"/>
		</db:delete>
		<json:object-to-json-transformer doc:name="Object to JSON"/>
	</flow>
	<flow name="ActualizarProducto">
		<http:listener config-ref="HTTP_Listener_Configuration" path="/Producto" allowedMethods="PUT" doc:name="HTTP"/>
		<json:json-to-object-transformer doc:name="JSON to Object"/>
		<db:update config-ref="MySQL_Configuration" doc:name="Database">
			<db:template-query-ref name="Template_Query4"/>
		</db:update>
		<json:object-to-json-transformer doc:name="Object to JSON"/>
	</flow>
</mule>
